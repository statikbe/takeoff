// Selection style
$color-highlight: lighten($color-primary, 10%);

// Breakpoints var
$currentBreakpoints: ();
$allBreakpoints: ();

::-moz-selection { background: rgba($color-highlight,0.8); color: $white; text-shadow: none; }
::selection { background: rgba($color-highlight,0.8); color: $white; text-shadow: none; }

// Reset box-sizing
//
*, *:before, *:after { box-sizing: border-box; }

:last-child {
  margin-bottom: 0;
}

// Page loading style + breakpoints
//
html {
  &.js {
    &:before,
    &:after {
      content: "";
      display: block;
      width: 100%;
      height: 2px;
    }
    &:before {
      overflow: hidden;
    }
    &:after {
      animation: move 1s linear infinite;
      position: absolute;
      top: 0;
      left: -100%;
      z-index: 10;
      background: $color-primary;
    }
  }
  &.wf-active,
  &.wf-inactive,
  &.js-done {
    &:before,
    &:after {
      display: none;
    }
  }
}

body {
  .js & {
    visibility: hidden !important;
  }
  .js-done & {
    visibility: visible !important;
  }
  &:before,
  &:after {
    content: '';
    display: none !important;
    visibility: hidden !important;
    speak: none;
  }
  &:before {
    @each $bp, $px in $breakpoints {
      $allBreakpoints: append(
        $allBreakpoints,
        #{$bp}/#{$px},
        space
      ) !global;
    }
    content: "#{$allBreakpoints}";
  }
  &:after {
    @each $bp, $px in $breakpoints {
      @include breakpoint($bp) {
        $currentBreakpoints: append(
          $currentBreakpoints,
          #{$bp},
          comma
        ) !global;
        content: '#{$currentBreakpoints}';
      }
    }
  }
}

// Html
//
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
// Body
//
body {
  @include fsRem($font-size-base);
  background-color: $color-background;
  color: $color-text;
  font-family: $font-family-base;
  font-weight: $font-weight-base;
  line-height: lh($line-height-base);
  min-width: 300px;
}

// Reset fonts for relevant elements
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
textarea {
  resize: vertical;
}

// Links
a {
  @include transitions(color background border);
  @include link-variant($color-link, $color-link-hover, $color-link-visited);
  &:hover,
  &:focus {
    text-decoration: none;
  }
}

// Paragraphs
p {
  margin: 0 0 $line-height-base;
}

hr {
  margin-top: $line-height-base;
  margin-bottom: $line-height-base;
  border: 0;
  border-top: 1px solid $gray-25;
}

// SVG
svg {
  fill: currentColor;
}


// Selection style
$color-highlight: lighten($color-primary, 10%);

::-moz-selection { background: rgba($color-highlight,0.8); color: $white; text-shadow: none; }
::selection { background: rgba($color-highlight,0.8); color: $white; text-shadow: none; }

// Reset box-sizing
//
*, *:before, *:after { box-sizing: border-box; }

:last-child {
  margin-bottom: 0;
}

// Page loading style
//
html {
  &.js {
    &:before,
    &:after {
      content: "";
      display: block;
      width: 100%;
      height: 2px;
    }
    &:before {
      overflow: hidden;
    }
    &:after {
      animation: move 1s linear infinite;
      position: absolute;
      top: 0;
      left: -100%;
      z-index: 10;
      background: $color-primary;
    }
  }
  &.wf-active,
  &.wf-inactive,
  &.js-done {
    &:before,
    &:after {
      display: none;
    }
  }
}

body {
  .js & {
    visibility: hidden !important;
  }
  .js-done & {
    visibility: visible !important;
  }
}

// Html
//
html {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  // text-shadow: 1px 1px 1px rgba(0,0,0,.004); gives an issue/bug in IE
}
// Body
//
body {
  background-color: $color-background;
  color: $color-text;
  font-family: $font-family-base;
  @include fsRem($font-size-base);
  font-weight: $font-weight-base;
  line-height: lh($line-height-base);
  @if $breakpoints-legacy {
    min-width: $breakpoints-legacy;
  } @else {
    min-width: 300px;
  }
}

// Reset fonts for relevant elements
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
textarea {
  resize: vertical;
}

// Links
a {
  @include transitions((color, background, border));
  @include link-variant($color-link, $color-link-hover, $color-link-visited);
  &:hover,
  &:focus {
    text-decoration: none;
  }
}

// Paragraphs
p {
  margin: 0 0 $line-height-base;
}

hr {
  margin-top: $line-height-base;
  margin-bottom: $line-height-base;
  border: 0;
  border-top: 1px solid $gray-25;
}

// SVG
svg {
  fill: currentColor;
}

// Print class
//
.print-only,
.print-only-inline {
  display: none;
}
.screen-only {
  display: block;
}
.screen-only-inline {
  display: inline;
}

.pull--left {
  float: left;
}
// .pull--bp-med--left
// @each $bp, $px in $breakpoints {
//   @include breakpoint($px, min-width) {
//     .pull--bp-#{$bp}--left {
//       float: left;
//     }
//   }
// }
.pull--right {
  float: right;
}
// @each $bp, $px in $breakpoints {
//   @include breakpoint($px, min-width) {
//     .pull--bp-#{$bp}--right {
//       float: right;
//     }
//   }
// }

// .show--bp-med
@each $bp, $px in $breakpoints {
  @include breakpoint($px, max-width) {
    .show--bp-#{$bp} {
      display: none !important;
    }
  }
}
// .hidden--bp-med
@each $bp, $px in $breakpoints {
  @include breakpoint($px, min-width) {
    .hidden--bp-#{$bp} {
      display: none !important;
    }
  }
}

/*! == Helper classes == */
.superhidden {
  display: none !important;
  visibility: hidden;
}
.visuallyhidden {
  clip: rect(0 0 0 0);
  border: 0;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  position: absolute;
  &.focusable:active,
  &.focusable:focus {
    clip: auto;
    width: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
  }
}
